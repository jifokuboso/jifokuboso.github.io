{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryosatoh2/Documents/otaki-camp-site/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryosatoh2/Documents/otaki-camp-site/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants } "],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryosatoh2/Documents/otaki-camp-site/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent } "],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryosatoh2/Documents/otaki-camp-site/src/app/reservation/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Calendar, Clock, Users, ChevronLeft, ChevronRight, Check, X, ShoppingBag } from \"lucide-react\"\nimport Link from \"next/link\"\n\ninterface TimeSlot {\n  time: string\n  available: boolean\n  plan?: string\n}\n\ninterface DayData {\n  date: number\n  available: boolean\n  timeSlots: TimeSlot[]\n}\n\nexport default function ReservationPage() {\n  const [selectedDate, setSelectedDate] = useState<number | null>(null)\n  const [selectedPlan, setSelectedPlan] = useState<string>('standard')\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState<string | null>(null)\n  const [currentMonth, setCurrentMonth] = useState(new Date())\n  const [selectedRentals, setSelectedRentals] = useState<{ [key: string]: number }>({})\n\n  // サンプルデータ（実際にはAPIから取得）\n  const calendarData: { [key: number]: DayData } = {\n    15: {\n      date: 15,\n      available: true,\n      timeSlots: [\n        { time: \"15:00\", available: true },\n        { time: \"16:00\", available: false },\n      ]\n    },\n    16: {\n      date: 16,\n      available: true,\n      timeSlots: [\n        { time: \"15:00\", available: true },\n        { time: \"16:00\", available: true },\n      ]\n    },\n    17: {\n      date: 17,\n      available: false,\n      timeSlots: []\n    },\n    22: {\n      date: 22,\n      available: true,\n      timeSlots: [\n        { time: \"15:00\", available: true },\n        { time: \"16:00\", available: false },\n      ]\n    },\n    23: {\n      date: 23,\n      available: true,\n      timeSlots: [\n        { time: \"15:00\", available: true },\n        { time: \"16:00\", available: true },\n      ]\n    },\n    24: {\n      date: 24,\n      available: true,\n      timeSlots: [\n        { time: \"15:00\", available: false },\n        { time: \"16:00\", available: true },\n      ]\n    },\n  }\n\n  const plans = [\n    {\n      id: 'light',\n      name: 'ライトプラン',\n      price: 5000,\n      description: '気軽に学校キャンプ体験'\n    },\n    {\n      id: 'standard',\n      name: 'スタンダードプラン',\n      price: 8000,\n      description: '手ぶらで設営！らくらくキャンプ'\n    },\n    {\n      id: 'premium',\n      name: 'プレミアムプラン',\n      price: 12000,\n      description: '贅沢！廃校グランピング'\n    }\n  ]\n\n  const rentalItems = [\n    {\n      id: 'tent',\n      name: 'テント（2〜4人用）',\n      price: 2000,\n      description: '設営簡単な高品質テント。防水性能も抜群です。',\n      supporter: '田中様'\n    },\n    {\n      id: 'chair-table',\n      name: 'チェア・テーブルセット',\n      price: 1500,\n      description: '軽量で持ち運びやすいアウトドア家具セット。',\n      supporter: '山田様'\n    },\n    {\n      id: 'bbq-grill',\n      name: 'BBQグリル',\n      price: 1800,\n      description: '炭火で楽しむ本格BBQグリル。炭・着火剤付き。',\n      supporter: '佐藤様'\n    },\n    {\n      id: 'sleeping-bag',\n      name: '寝袋・マット',\n      price: 1200,\n      description: '快適な睡眠をサポートする寝袋とマットのセット。'\n    },\n    {\n      id: 'lantern',\n      name: 'ランタン・照明',\n      price: 800,\n      description: '夜のキャンプを明るく照らすLEDランタンセット。'\n    },\n    {\n      id: 'cooking-set',\n      name: '調理器具セット',\n      price: 1000,\n      description: 'キャンプ料理に必要な調理器具一式をご用意。'\n    }\n  ]\n\n  const getDaysInMonth = (date: Date) => {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()\n  }\n\n  const getFirstDayOfMonth = (date: Date) => {\n    return new Date(date.getFullYear(), date.getMonth(), 1).getDay()\n  }\n\n  const monthNames = [\n    \"1月\", \"2月\", \"3月\", \"4月\", \"5月\", \"6月\",\n    \"7月\", \"8月\", \"9月\", \"10月\", \"11月\", \"12月\"\n  ]\n\n  const renderCalendar = () => {\n    const daysInMonth = getDaysInMonth(currentMonth)\n    const firstDay = getFirstDayOfMonth(currentMonth)\n    const days = []\n\n    // 空白のセルを追加\n    for (let i = 0; i < firstDay; i++) {\n      days.push(<div key={`empty-${i}`} className=\"p-2\"></div>)\n    }\n\n    // 日付のセルを追加\n    for (let day = 1; day <= daysInMonth; day++) {\n      const dayData = calendarData[day]\n      const isAvailable = dayData?.available || false\n      const isSelected = selectedDate === day\n\n      days.push(\n        <button\n          key={day}\n          onClick={() => isAvailable ? setSelectedDate(day) : null}\n          className={`\n            p-2 text-sm rounded-lg transition-colors\n            ${isSelected \n              ? 'bg-green-600 text-white' \n              : isAvailable \n                ? 'bg-green-100 text-green-800 hover:bg-green-200' \n                : 'bg-gray-100 text-gray-400 cursor-not-allowed'\n            }\n          `}\n          disabled={!isAvailable}\n        >\n          {day}\n        </button>\n      )\n    }\n\n    return days\n  }\n\n  const nextMonth = () => {\n    setCurrentMonth(new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1))\n    setSelectedDate(null)\n    setSelectedTimeSlot(null)\n  }\n\n  const prevMonth = () => {\n    setCurrentMonth(new Date(currentMonth.getFullYear(), currentMonth.getMonth() - 1))\n    setSelectedDate(null)\n    setSelectedTimeSlot(null)\n  }\n\n  const updateRentalQuantity = (itemId: string, quantity: number) => {\n    setSelectedRentals(prev => {\n      if (quantity === 0) {\n        const newRentals = { ...prev }\n        delete newRentals[itemId]\n        return newRentals\n      }\n      return { ...prev, [itemId]: quantity }\n    })\n  }\n\n  const calculateRentalTotal = () => {\n    return Object.entries(selectedRentals).reduce((total, [itemId, quantity]) => {\n      const item = rentalItems.find(item => item.id === itemId)\n      return total + (item ? item.price * quantity : 0)\n    }, 0)\n  }\n\n  const calculateTotal = () => {\n    const planPrice = plans.find(p => p.id === selectedPlan)?.price || 0\n    const rentalTotal = calculateRentalTotal()\n    return planPrice + rentalTotal\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm\">\n        <div className=\"container mx-auto px-4 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <Link href=\"/\" className=\"text-2xl font-bold text-gray-900\">\n              奥房総みらいプロジェクト\n            </Link>\n            <Link href=\"/\" className=\"text-gray-600 hover:text-gray-900\">\n              ← ホームに戻る\n            </Link>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"max-w-6xl mx-auto\">\n          <h1 className=\"text-4xl font-light text-gray-900 text-center mb-12\">ご予約</h1>\n          \n          <div className=\"grid lg:grid-cols-2 gap-8\">\n            {/* カレンダーセクション */}\n            <Card className=\"bg-white shadow-lg\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <Calendar className=\"w-5 h-5 mr-2\" />\n                  日程を選択\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                {/* 月切り替え */}\n                <div className=\"flex items-center justify-between mb-6\">\n                  <button\n                    onClick={prevMonth}\n                    className=\"p-2 hover:bg-gray-100 rounded-lg\"\n                  >\n                    <ChevronLeft className=\"w-5 h-5\" />\n                  </button>\n                  <h3 className=\"text-xl font-medium\">\n                    {currentMonth.getFullYear()}年{monthNames[currentMonth.getMonth()]}\n                  </h3>\n                  <button\n                    onClick={nextMonth}\n                    className=\"p-2 hover:bg-gray-100 rounded-lg\"\n                  >\n                    <ChevronRight className=\"w-5 h-5\" />\n                  </button>\n                </div>\n\n                {/* 曜日ヘッダー */}\n                <div className=\"grid grid-cols-7 gap-1 mb-2\">\n                  {['日', '月', '火', '水', '木', '金', '土'].map((day) => (\n                    <div key={day} className=\"p-2 text-center text-sm font-medium text-gray-500\">\n                      {day}\n                    </div>\n                  ))}\n                </div>\n\n                {/* カレンダー */}\n                <div className=\"grid grid-cols-7 gap-1\">\n                  {renderCalendar()}\n                </div>\n\n                {/* 凡例 */}\n                <div className=\"mt-6 flex items-center space-x-4 text-sm\">\n                  <div className=\"flex items-center\">\n                    <div className=\"w-4 h-4 bg-green-100 rounded mr-2\"></div>\n                    <span>空きあり</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <div className=\"w-4 h-4 bg-gray-100 rounded mr-2\"></div>\n                    <span>満室</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* 時間・プラン選択セクション */}\n            <div className=\"space-y-6\">\n              {/* プラン選択 */}\n              <Card className=\"bg-white shadow-lg\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Users className=\"w-5 h-5 mr-2\" />\n                    プラン選択\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    {plans.map((plan) => (\n                      <button\n                        key={plan.id}\n                        onClick={() => setSelectedPlan(plan.id)}\n                        className={`\n                          w-full p-4 rounded-lg border-2 text-left transition-colors\n                          ${selectedPlan === plan.id \n                            ? 'border-green-600 bg-green-50' \n                            : 'border-gray-200 hover:border-gray-300'\n                          }\n                        `}\n                      >\n                        <div className=\"flex justify-between items-center\">\n                          <div>\n                            <h4 className=\"font-medium text-gray-900\">{plan.name}</h4>\n                            <p className=\"text-sm text-gray-600\">{plan.description}</p>\n                          </div>\n                          <div className=\"text-right\">\n                            <div className=\"text-lg font-bold text-green-600\">¥{plan.price.toLocaleString()}</div>\n                            <div className=\"text-sm text-gray-500\">/泊</div>\n                          </div>\n                        </div>\n                      </button>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* 時間選択 */}\n              {selectedDate && (\n                <Card className=\"bg-white shadow-lg\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <Clock className=\"w-5 h-5 mr-2\" />\n                      チェックイン時間選択\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-sm text-gray-600 mb-4\">\n                      {currentMonth.getFullYear()}年{monthNames[currentMonth.getMonth()]}{selectedDate}日\n                    </p>\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      {calendarData[selectedDate]?.timeSlots.map((slot) => (\n                        <button\n                          key={slot.time}\n                          onClick={() => slot.available ? setSelectedTimeSlot(slot.time) : null}\n                          disabled={!slot.available}\n                          className={`\n                            p-3 rounded-lg border-2 transition-colors flex items-center justify-center\n                            ${selectedTimeSlot === slot.time\n                              ? 'border-green-600 bg-green-50'\n                              : slot.available\n                                ? 'border-gray-200 hover:border-gray-300'\n                                : 'border-gray-200 bg-gray-100 cursor-not-allowed'\n                            }\n                          `}\n                        >\n                          <span className={slot.available ? 'text-gray-900' : 'text-gray-400'}>\n                            {slot.time}\n                          </span>\n                          {slot.available ? (\n                            <Check className=\"w-4 h-4 ml-2 text-green-600\" />\n                          ) : (\n                            <X className=\"w-4 h-4 ml-2 text-red-400\" />\n                          )}\n                        </button>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n\n              {/* レンタル用品選択 */}\n              <Card className=\"bg-white shadow-lg\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <ShoppingBag className=\"w-5 h-5 mr-2\" />\n                    レンタル用品（オプション）\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {rentalItems.map((item) => (\n                      <div key={item.id} className=\"border rounded-lg p-4\">\n                        <div className=\"flex justify-between items-start mb-2\">\n                          <div className=\"flex-1\">\n                            <h4 className=\"font-medium text-gray-900 flex items-center\">\n                              {item.name}\n                              {item.supporter && (\n                                <span className=\"ml-2 bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full\">\n                                  {item.supporter}提供\n                                </span>\n                              )}\n                            </h4>\n                            <p className=\"text-sm text-gray-600 mt-1\">{item.description}</p>\n                            <p className=\"text-lg font-bold text-green-600 mt-2\">¥{item.price.toLocaleString()}/泊</p>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <span className=\"text-sm text-gray-600\">数量:</span>\n                          <div className=\"flex items-center space-x-3\">\n                            <button\n                              onClick={() => updateRentalQuantity(item.id, Math.max(0, (selectedRentals[item.id] || 0) - 1))}\n                              className=\"w-8 h-8 rounded-full bg-gray-200 hover:bg-gray-300 flex items-center justify-center\"\n                              disabled={(selectedRentals[item.id] || 0) === 0}\n                            >\n                              -\n                            </button>\n                            <span className=\"w-8 text-center font-medium\">\n                              {selectedRentals[item.id] || 0}\n                            </span>\n                            <button\n                              onClick={() => updateRentalQuantity(item.id, (selectedRentals[item.id] || 0) + 1)}\n                              className=\"w-8 h-8 rounded-full bg-green-600 hover:bg-green-700 text-white flex items-center justify-center\"\n                            >\n                              +\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  {Object.keys(selectedRentals).length > 0 && (\n                    <div className=\"mt-6 p-4 bg-green-50 rounded-lg\">\n                      <h5 className=\"font-medium text-gray-900 mb-2\">選択中のレンタル用品</h5>\n                      {Object.entries(selectedRentals).map(([itemId, quantity]) => {\n                        const item = rentalItems.find(i => i.id === itemId)\n                        if (!item) return null\n                        return (\n                          <div key={itemId} className=\"flex justify-between text-sm\">\n                            <span>{item.name} × {quantity}</span>\n                            <span>¥{(item.price * quantity).toLocaleString()}</span>\n                          </div>\n                        )\n                      })}\n                      <div className=\"border-t pt-2 mt-2\">\n                        <div className=\"flex justify-between font-medium\">\n                          <span>レンタル小計</span>\n                          <span>¥{calculateRentalTotal().toLocaleString()}</span>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n\n              {/* 予約確認 */}\n              {selectedDate && selectedTimeSlot && (\n                <Card className=\"bg-white shadow-lg\">\n                  <CardHeader>\n                    <CardTitle>予約内容確認</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-3 mb-6\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">日程</span>\n                        <span className=\"font-medium\">\n                          {currentMonth.getFullYear()}年{monthNames[currentMonth.getMonth()]}{selectedDate}日\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">チェックイン</span>\n                        <span className=\"font-medium\">{selectedTimeSlot}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">プラン</span>\n                        <span className=\"font-medium\">\n                          {plans.find(p => p.id === selectedPlan)?.name}\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">プラン料金</span>\n                        <span className=\"font-medium\">\n                          ¥{plans.find(p => p.id === selectedPlan)?.price.toLocaleString()}\n                        </span>\n                      </div>\n                      {Object.keys(selectedRentals).length > 0 && (\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-gray-600\">レンタル用品</span>\n                          <span className=\"font-medium\">\n                            ¥{calculateRentalTotal().toLocaleString()}\n                          </span>\n                        </div>\n                      )}\n                      <div className=\"border-t pt-3\">\n                        <div className=\"flex justify-between text-lg font-bold\">\n                          <span>合計金額</span>\n                          <span className=\"text-green-600\">\n                            ¥{calculateTotal().toLocaleString()}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                    <Button className=\"w-full bg-green-600 hover:bg-green-700 text-white py-3\">\n                      予約手続きに進む\n                    </Button>\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}}]
}